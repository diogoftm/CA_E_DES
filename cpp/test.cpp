#include "EDES.h"
#include <openssl/conf.h>
#include "opensslSetup.h"
#include <iostream>

uint8_t input[64] = {0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                     0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                     0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
                     0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
                     0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01};

uint8_t key[32] = {0x2b, 0x8f, 0x1b, 0x4c, 0x71, 0x51, 0xa3, 0x9d, 0x88, 0xf2, 0x7b, 0x5a, 0x16, 0xc5, 0xe9, 0x3d,
                   0x01, 0x51, 0x93, 0x6f, 0x33, 0xda, 0x77, 0xb5, 0x68, 0x11, 0xf7, 0xa8, 0xd6, 0x45, 0x22, 0x04};

// file to be deleted

int main()
{

    opensslSetup("../openssl.conf");


    EDES edes = EDES();

    edes.set_key(key);

    uint8_t *result = edes.encrypt(input, sizeof(input) / sizeof(input[0]));

    std::cout << "cipher text:\n";

    for (int i = 0; i < 64; i++)
    {
        if (i % 8 == 0)
            std::cout << "\n";
        printf("%X ", result[i]);
    }

    std::cout << "\n plain text:";

    uint8_t *result_plain = edes.decrypt(result, sizeof(input) / sizeof(input[0]));

    for (int i = 0; i < 64; i++)
    {
        if (i % 8 == 0)
            std::cout << "\n";
        printf("%X ", result_plain[i]);
    }

    std::cout << "\n\n";

    delete[] result;
    delete[] result_plain;

    return 0;
}